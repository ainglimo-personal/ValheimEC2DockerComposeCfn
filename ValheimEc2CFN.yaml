AWSTemplateFormatVersion: 2010-09-09
Parameters: 
  EC2KeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Specify Keypair name if you'd like to attach an existing keypair to the instance.
    Default: ""
  EC2InstanceConnect:
    Type: String
    Description: Enable EC2 Instance connect? This will open SSH 
    AllowedValues: 
      - True
      - False
    Default: "True"
  InstanceType:
    Type: String
    Description: Default t3.medium = 4GB RAM, 2vCPUs | t3.large = 8GB RAM, 2vCPUs | t3.xlarge = 16GB RAM, 4vCPUs
    AllowedValues:
      - t3.medium
      - t3.large
      - t3.xlarge
    Default: t3.medium
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Description: Automatically pull latest AL2023 AMI. DONT CHANGE unless you know what you're doing.
    Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-minimal-kernel-default-x86_64'
Mappings:
  EC2InstanceConnectCIDR:
    cn-north-1:
      CIDR: 43.196.20.40/29
    cn-northwest-1:
      CIDR: 43.192.155.8/29
    us-gov-east-1:
      CIDR: 18.252.4.0/30
    us-gov-west-1:
      CIDR: 15.200.28.80/30
    af-south-1:
      CIDR: 13.244.121.196/30
    ap-east-1:
      CIDR: 43.198.192.104/29
    ap-northeast-1:
      CIDR: 3.112.23.0/29
    ap-northeast-2:
      CIDR: 13.209.1.56/29
    ap-northeast-3:
      CIDR: 15.168.105.160/29
    ap-south-1:
      CIDR: 13.233.177.0/29
    ap-south-2:
      CIDR: 18.60.252.248/29
    ap-southeast-1:
      CIDR: 3.0.5.32/29
    ap-southeast-2:
      CIDR: 13.239.158.0/29
    ap-southeast-3:
      CIDR: 43.218.193.64/29
    ap-southeast-4:
      CIDR: 16.50.248.80/29
    ca-central-1:
      CIDR: 35.183.92.176/29
    eu-central-1:
      CIDR: 3.120.181.40/29
    eu-central-2:
      CIDR: 16.63.77.8/29
    eu-north-1:
      CIDR: 13.48.4.200/30
    eu-south-1:
      CIDR: 15.161.135.164/30
    eu-south-2:
      CIDR: 18.101.90.48/29
    eu-west-1:
      CIDR: 18.202.216.48/29
    eu-west-2:
      CIDR: 3.8.37.24/29
    eu-west-3:
      CIDR: 35.180.112.80/29
    me-central-1:
      CIDR: 3.29.147.40/29
    me-south-1:
      CIDR: 16.24.46.56/29
    sa-east-1:
      CIDR: 18.228.70.32/29
    us-east-1:
      CIDR: 18.206.107.24/29
    us-east-2:
      CIDR: 3.16.146.0/29
    us-west-1:
      CIDR: 13.52.6.112/29
    us-west-2:
      CIDR: 18.237.140.160/29
Conditions:
  EC2InstanceConnectEnabled: !Equals
    - !Ref EC2InstanceConnect
    - "True"
  EC2KeypairUsed: !Not
    - !Equals
      - !Ref EC2KeyPair
      - ""

Resources:
  Vpc:
    Type: AWS::EC2:VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: ValheimServerVpc
  PublicSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select 
        - 0
        - !GetAZs 
          Ref: 'AWS::Region'
      VpcId: !Ref Vpc
      CidrBlock: 10.0.0.0/24
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway
  InternetRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnet1
  ValheimServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: VahleimServerSecurityGroup
      GroupDescription: Security Group defining inbound rules for the Valheim server
      SecurityGroupIngress: 
        - CidrIp: 0.0.0.0/0
          FromPort: 2456
          ToPort: 2458
          IpProtocol: udp
      VpcId: !Ref Vpc
  EC2InstanceConnectInboundRule:
    Type: AWS::EC2::SecurityGroupIngress
    Condition: EC2InstanceConnectEnabled
    Properties:
      Description: Inbound Rule that is added to the security group ONLY if EC2 connect was specified in the parameters.
      GroupId: !Ref ValheimServerSecurityGroup
      CidrIp: !FindInMap 
        - EC2InstanceConnectCIDR 
        - !Ref ${AWS::Region}
        - "CIDR"
      FromPort: 22
      IpProtocol: tcp
  ValheimServerBackupBucket:
    Type: AWS::S3::Bucket
    Properties:
      Description: S3 bucket where valheim 'worlds', docker configs, etc. can be stored.
      PublicAccessBlockConfiguration:  
        BlockPublicAcls: True
        BlockPublicPolicy: True
      BucketName: !Join
        - "-"
        - - "valheim-server-backup-bucket"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split: ["/", !Ref "AWS::StackId"]
  ValheimServerIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ValheimServerIAMRole
      Description: Role that is used by ec2 server to grant access for S3 bucket
      Policies: 
        - !Ref BackupBucketIAMAccessPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
  BackupBucketIAMAccessPolicy:
    Type: AWS::IAM::RolePolicy
    Properties:
      RoleName: !Ref ValheimServerIAMRole
      PolicyName: ValheimServerBucketAccessPolicy
      PolicyDocument: !Sub {
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "VisualEditor0",
            "Effect": "Allow",
            "Action": [
                "s3:ListStorageLensConfigurations",
                "s3:ListAccessPointsForObjectLambda",
                "s3:GetAccessPoint",
                "s3:PutAccountPublicAccessBlock",
                "s3:GetAccountPublicAccessBlock",
                "s3:ListAllMyBuckets",
                "s3:ListAccessPoints",
                "s3:PutAccessPointPublicAccessBlock",
                "s3:ListJobs",
                "s3:PutStorageLensConfiguration",
                "s3:ListMultiRegionAccessPoints",
                "s3:CreateJob"
            ],
            "Resource": "*"
        },
        {
            "Sid": "VisualEditor1",
            "Effect": "Allow",
            "Action": "s3:*",
            "Resource": [
                "arn:aws:s3:::${ValheimServerBackupBucket}",
                "arn:aws:s3:::${ValheimServerBackupBucket}/*"
            ]
        }
    ]
}
  ValheimServerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: ValheimServerInstanceProfile
      Roles: 
        - !Ref ValheimServerIAMRole
  ValheimServerEc2Instance:
    Type: AWS::EC2::Instance
    Properties:
      IamInstanceProfile: !Ref ValheimServerInstanceProfile
      ImageId: !Ref LatestAmiId
      InstanceType: !Ref InstanceType
      SubnetId: !Ref PublicSubnet1
      KeyName: !If [ !Ref EC2KeypairUsed, !Ref EC2Keypair, "" ]
      
